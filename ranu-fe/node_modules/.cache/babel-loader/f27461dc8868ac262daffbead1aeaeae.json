{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lpsp/Desktop/Aplica\\xE7\\xF5es Inform\\xE1ticas em Engenharia Biom\\xE9dica/TP/Vers\\xE3o Github/ranu-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      alert: {\n        show: false,\n        message: ''\n      },\n      nameRules: [function (value) {\n        return !!value || 'Name is required';\n      }],\n      emailRules: [function (value) {\n        return !!value || 'E-mail is required';\n      }, function (value) {\n        return /.+@.+\\..+/.test(value) || \"E-mail must be valid\";\n      }],\n      passwordRules: [function (value) {\n        return !!value || 'Password is required';\n      }],\n      user: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      suForm: true\n    };\n  },\n  methods: {\n    signup: function signup() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var valid, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                valid = _this.$refs.signupForm.validate();\n\n                if (!valid) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return _this.axios.post('/signup', _this.user);\n\n              case 5:\n                res = _context.sent;\n\n                _this.$refs.signupForm.reset();\n\n                console.log(res);\n                _this.alert = {\n                  show: true,\n                  type: 'success',\n                  message: res.data.message\n                };\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                _this.alert = {\n                  show: true,\n                  type: 'error',\n                  message: _context.t0.response.data.message\n                };\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }))();\n    },\n    signin: function signin() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var valid, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                valid = _this2.$refs.signinForm.validate();\n\n                if (!valid) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _this2.axios.post(\"/signin\", _this2.user);\n\n              case 5:\n                res = _context2.sent;\n\n                if (res.data.NotFound) {\n                  _this2.alert = {\n                    show: true,\n                    type: 'error',\n                    message: res.data.message\n                  };\n                } else {\n                  sessionStorage.setItem('session', JSON.stringify(res.data));\n\n                  _this2.$router.push('/profile');\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                _this2.alert = {\n                  show: true,\n                  type: 'error',\n                  message: _context2.t0.response.data.message\n                };\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;EACAA;IAAA;MACAC;QAAAC;QAAAC;MAAA,CADA;MAEAC,YACA;QAAA;MAAA,CADA,CAFA;MAKAC,aACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CALA;MASAC,gBACA;QAAA;MAAA,CADA,CATA;MAYAC;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CAZA;MAaAC;IAbA;EAAA,CADA;EAkBAC;IACAC,MADA,oBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,KADA,GACA,iCADA;;gBAAA,KAEAA,KAFA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA;gBAAA,OAIA,uCAJA;;cAAA;gBAIAC,GAJA;;gBAKA;;gBACAC;gBACA;kBACAf,UADA;kBAEAgB,eAFA;kBAGAf;gBAHA;gBAPA;gBAAA;;cAAA;gBAAA;gBAAA;gBAcA;kBACAD,UADA;kBAEAgB,aAFA;kBAGAf;gBAHA;;cAdA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAsBA,CAvBA;IAwBAgB,MAxBA,oBAwBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAJ,KADA,GACA,kCADA;;gBAAA,KAEAA,KAFA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA;gBAAA,OAIA,yCAJA;;cAAA;gBAIAC,GAJA;;gBAKA;kBACA;oBACAd,UADA;oBAEAgB,aAFA;oBAGAf;kBAHA;gBAKA,CANA,MAMA;kBACAiB;;kBACA;gBACA;;gBAdA;gBAAA;;cAAA;gBAAA;gBAAA;gBAiBA;kBACAlB,UADA;kBAEAgB,aAFA;kBAGAf;gBAHA;;cAjBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAyBA;EAjDA;AAlBA","names":["data","alert","show","message","nameRules","emailRules","passwordRules","user","name","email","password","role","suForm","methods","signup","valid","res","console","type","signin","sessionStorage"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\r\n<v-container>\r\n  <v-app-bar app color=\"primary\" dark>\r\n    <v-tool-title>Hospital dos Bombados</v-tool-title>\r\n  </v-app-bar>\r\n  <v-alert text v-model=\"alert.show\" :type=\"alert.type\" dismissible>{{alert.message}}\r\n  </v-alert>\r\n  <v-row justify=\"center\">\r\n    <v-col class=\"text-center\" md=\"2\" sm=\"2\">\r\n      <v-btn class=\"primary\" @click=\"suForm=true\">Sign up</v-btn>\r\n    </v-col>\r\n      <v-col class=\"text-center\" md=\"2\" sm=\"2\" @click=\"suForm=false\">\r\n      <v-btn class=\"success\" @click=\"suForm=false\">Sign in</v-btn>\r\n    </v-col>\r\n  </v-row>\r\n  <v-row justify=\"center\">\r\n    <v-col md=\"6\" sm=\"6\">\r\n    <v-card v-if=\"suForm\">\r\n      <v-card-title> Sign Up</v-card-title>\r\n      <v-card-text>\r\n        <v-form class=\"ma-3\" @submit.prevent=\"signup()\" ref=\"signupForm\">\r\n          <v-text-field\r\n            label=\"Name\"\r\n            prepend-icon=\"mdi-account\"\r\n            :rules=\"nameRules\"\r\n            v-model=\"user.name\"\r\n            ></v-text-field>\r\n            <v-text-field\r\n            label=\"E-mail\"\r\n            prepend-icon=\"mdi-email\"\r\n            :rules=\"emailRules\"\r\n            v-model=\"user.email\"\r\n            ></v-text-field>\r\n            <v-text-field \r\n            label=\"Password\"\r\n            prepend-icon=\"mdi-lock\"\r\n            type=\"password\"\r\n            :rules=\"passwordRules\"\r\n            v-model=\"user.password\"\r\n            ></v-text-field>\r\n          <v-radio-group row\r\n          v-model=\"user.role\"\r\n          :rules=\"[(v) => !!v || 'Please choose one!']\">\r\n          <v-radio label=\"Médico\" value=\"medico\"></v-radio>\r\n          <v-radio label=\"Técnico\" value=\"tecnico\"></v-radio>\r\n          </v-radio-group>\r\n       <v-btn block class=\"primary mt-3\" type=\"submit\">Sign Up</v-btn>\r\n        </v-form>\r\n      </v-card-text>\r\n    </v-card>\r\n\r\n       <v-card v-else>\r\n      <v-card-title> Sign In</v-card-title>\r\n      <v-card-text>\r\n        <v-form class=\"ma-3\" @submit.prevent=\"signin()\" ref=\"signinForm\">\r\n            <v-text-field\r\n            label=\"E-mail\"\r\n            prepend-icon=\"mdi-email\"\r\n            :rules=\"emailRules\"\r\n            v-model=\"user.email\"\r\n            ></v-text-field>\r\n            <v-text-field \r\n            label=\"Password\"\r\n            prepend-icon=\"mdi-lock\"\r\n            type=\"password\"\r\n            :rules=\"passwordRules\"\r\n            v-model=\"user.password\"\r\n            ></v-text-field>\r\n          <v-radio-group row\r\n          v-model=\"user.role\"\r\n          :rules=\"[(v) => !!v || 'Please choose one!']\">\r\n          <v-radio label=\"Médico\" value=\"medico\"></v-radio>\r\n          <v-radio label=\"Técnico\" value=\"tecnico\"></v-radio>\r\n          </v-radio-group>\r\n       <v-btn block class=\"success mt-3\" type=\"submit\">Sign Ip</v-btn>\r\n        </v-form>\r\n      </v-card-text>\r\n    </v-card>\r\n\r\n    </v-col>\r\n  </v-row>\r\n</v-container>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data: () => ({\r\n      alert: { show: false, message: ''}, \r\n      nameRules: [\r\n        value => !!value || 'Name is required',\r\n      ],\r\n      emailRules: [\r\n        value => !!value || 'E-mail is required',\r\n        value => /.+@.+\\..+/.test(value) || \"E-mail must be valid\"\r\n      ],\r\n      passwordRules: [\r\n        value => !!value || 'Password is required',\r\n      ],\r\n      user: {name: \"\", email: \"\", password: \"\", role: \"\"},\r\n      suForm: true\r\n\r\n    }),\r\n\r\n    methods: {\r\n      async signup() {\r\n        let valid= this.$refs.signupForm.validate();\r\n      if (valid) {\r\n        try {\r\n          const res = await this.axios.post('/signup', this.user);\r\n          this.$refs.signupForm.reset();\r\n          console.log(res);\r\n          this.alert = {\r\n            show: true,\r\n            type: 'success',\r\n            message: res.data.message\r\n          }\r\n\r\n        } catch (error) {\r\n          this.alert = {\r\n            show: true,\r\n            type: 'error',\r\n            message: error.response.data.message\r\n          }\r\n\r\n        }\r\n      }\r\n      },\r\n      async signin() {\r\n        let valid= this.$refs.signinForm.validate();\r\n        if (valid) {\r\n          try {\r\n            const res = await this.axios.post(\"/signin\", this.user);\r\n            if (res.data.NotFound) {\r\n              this.alert = {\r\n                show: true,\r\n                type: 'error',\r\n                message: res.data.message\r\n              }\r\n            } else {\r\n              sessionStorage.setItem('session', JSON.stringify(res.data));\r\n              this.$router.push('/profile')\r\n            }\r\n\r\n          } catch (error) {\r\n          this.alert = {\r\n            show: true,\r\n            type: 'error',\r\n            message: error.response.data.message\r\n          }\r\n\r\n        }\r\n        }\r\n    }\r\n\r\n    }\r\n    \r\n  }\r\n  </script>\r\n"]},"metadata":{},"sourceType":"module"}